name: Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
    docker:
        name: Build Image
        runs-on: ubuntu-latest
        permissions:
          contents: read
          packages: write
          id-token: write
    
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
    
          - name: Get TDLib
            uses: robinraju/release-downloader@v1
            with:
              repository: nyaruta/tdlib.native-alpine
              latest: true
              fileName: tdlib.zip
          
          - name: Prepare TDLib
            run: |
              mkdir -p ${GITHUB_WORKSPACE}/helpers/tdlib/data
              unzip tdlib.linux.zip -d ${GITHUB_WORKSPACE}/helpers/tdlib/data
    
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
    
          - name: Log into registry ${{ env.REGISTRY }}
            if: github.event_name != 'pull_request'
            uses: docker/login-action@v3
            with:
              registry: ${{ env.REGISTRY }}
              username: ${{ github.actor }}
              password: ${{ secrets.GITHUB_TOKEN }}
    
          - name: Extract Docker metadata
            id: meta
            uses: docker/metadata-action@v5
            with:
              images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
              tags: |
                    type=raw,value=latest
                    type=ref,event=tag
                    type=sha
          - name: Build and push Docker image
            id: build-and-push
            uses: docker/build-push-action@v5
            with:
              context: .
              push: ${{ github.event_name != 'pull_request' }}
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}
              cache-from: type=gha
              cache-to: type=gha,mode=max